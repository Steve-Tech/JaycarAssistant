resistors = [[[], [], [], [], [], [], [], [], [], [], [], ['10R', '11R', '12R', '13R'], ['15R', '16R', '18R', '20R'], ['22R', '24R', '27R', '30R'], ['33R', '36R', '39R', '43R'], ['47R', '51R', '56R', '62R'], ['68R', '75R', '82R', '91R'], ['100R', '110R', '120R', '130R'], ['150R', '160R', '180R', '200R'], ['220R', '240R', '270R', '300R'], ['330R', '360R', '390R', '430R']],
             [['470R', '510R', '560R', '620R'], ['680R', '750R', '820R', '910R'], ['1K0', '1K1', '1K2', '1K3'], ['1K5', '1K6', '1K8', '2K0'], ['2K2', '2K4', '2K7', '3K0'], ['3K3', '3K6', '3K9', '4K3'], ['4K7', '5K1', '5K6', '6K2'], ['6K8', '7K5', '8K2', '9K1'], ['10K', '11K', '12K', '13K'], ['15K', '16K', '18K', '20K'], ['22K', '24K', '27K', '30K'], ['33K', '36K', '39K', '43K'], ['47K', '51K', '56K', '62K'], ['68K', '75K', '82K', '91K'], ['100K', '110K', '120K', '130K'], ['150K', '160K', '180K', '200K'], ['220K', '240K', '270K', '300K'], ['330K', '360K', '390K', '430K'], ['470K', '510K', '560K', '620K'], ['680K', '750K', '820K', '910K'], ['1M0', '10M', '', '']],
             [['0R0', '1R0', '1R2', '1R5'], ['1R8', '2R2', '2R7', '3R3'], ['3R9', '4R7', '5R6', '6R8'], ['8R2', '1M2', '1M5', '1M8'], ['2M2', '2M7', '3M3', '3M9'], ['4M7', '5M6', '6M8', '8M2'], ['10M', '', '', ''], ['1R0', '1R2', '1R5', '1R8'], ['2R2', '2R7', '3R3', '3R9'], ['4R7', '5R6', '6R8', '8R2'], ['10R', '12R', '15R', '18R'], ['22R', '27R', '33R', '39R'], ['47R', '56R', '68R', '82R'], ['100R', '120R', '150R', '180R'], ['220R', '270R', '330R', '390R'], ['470R', '560R', '680R', '820R'], ['1K0', '1K2', '1K5', '1K8'], ['2K2', '2K7', '3K3', '3K9'], ['4K7', '5K6', '6K8', '8K2'], ['10K', '12K', '15K', '18K'], ['22K', '27K', '33K', '39K']],
             [['47K', '56K', '68K', '82K'], ['100K', '120K', '150K', '180K'], ['220K', '270K', '330K', '390K'], ['470K', '560K', '680K', '820K'], ['1M0', '1M2', '1M5', '2M2'], ['3M3', '3M9', '4M7', '5M6'], ['8M2', '10M', '', ''], ['0R1', '0R22', '0R47', '1R0'], ['1R5', '1R8', '2R2', '2R7'], ['3R3', '3R9', '4R7', '5R6'], ['6R8', '8R2', '10R', '12R'], ['15R', '18R', '22R', '27R'], ['33R', '39R', '47R', '56R'], ['68R', '82R', '100R', '120R'], ['150R', '180R', '220R', '270R'], ['330R', '390R', '470R', '560R'], ['680R', '820R', '1K0', '1K5'], ['2K2', '3K3', '4K7', ''], ['1R0', '2R2', '3R3', '3R9'], ['4R7', '5R6', '6R8', '8R2'], ['10R', '12R', '15R', '18R']],
             [['22R', '27R', '47R', '68R'], ['100R', '270R', '470R', '820R'], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]]

resistors_pricing = [['', ['Watts', 'Qty 1+', 'Qty 25+', 'Qty 100+']], ['bg-warning text-dark', ['0.25W', '$0.48', '$0.34', '$0.29']], ['bg-light text-dark', ['0.5W', '$0.55', '$0.39', '$0.33']], ['bg-success', ['1W', '$0.48', '$0.34', '$0.29']], ['bg-primary', ['5W', '$0.48', '$0.34', '$0.29']], ['bg-purple', ['10W', '$1.80', '$1.25', '$1.05']]]

resistor_message = ""

def get_resistor_colour(countin):
    count = countin / 4
    if count <= 31: return "bg-light text-dark"
    elif count <= 38: return "bg-warning text-dark"
    elif count <= 59: return "bg-success"
    elif count <= 70: return "bg-primary"
    elif count <= 75: return "bg-purple"
    else: return ""


potentiometers = [[[], [], ['B500R', 'B1K', 'B5K', 'B10K'], ['B25K', 'B50K', 'B100K', 'B250K'], ['B500K', 'B1M', 'A1K', 'A5K'], ['A10K', 'A25K', 'A50K', 'A100K'], ['A250K', 'A500K', 'A1M', ''], ['B10K', 'B25K', 'B50K', 'B100K'], ['A10K', 'A50K', 'A100K', ''], ['B5R', '', '', ''], ['B1K', 'B5K', 'B10K', 'B50K'], ['B100K', 'B1M', 'A1K', 'A10K'], ['A50K', 'B50K', 'B100K', 'A10K'], ['B1K', 'B10K', 'B50K', 'B100K'], ['B1M', 'A10K', 'A50K', 'B10K'], ['B50K', 'B100K', 'A10K', 'A50K'], ['200R', '500R', '1K', '5K'], ['10K', '20K', '50K', '100K'], ['250K', '500K', '1M', '2M'], ['500R', '1K', '2K', '5K'], ['10K', '20K', '50K', '100K']],
                  [['200K', '500K', '', ''], ['200R', '500R', '1K', '2K'], ['5K', '10K', '20K', '50K'], ['100K', '250K', '500K', '1M'], ['10K', '100R', '500R', '1000R'], ['2000R', '5000R', '10000R', '20000R'], ['50K', '100K', '1M', '100R'], ['500R', '1K', '2K', '5K'], ['10K', '20K', '50K', '100K'], ['1M', '', '', ''], [], [], [], [], [], [], [], [], [], [], []]]

#pots_pricing = [['', ['Pricing is unavailable']]]
pots_pricing = None

pot_message = "Starts from row 5"

def get_potentiometer_colour(countin):
    count = countin / 4
    if count <= 5: return "bg-light text-dark"
    elif count <= 7: return "bg-primary"
    elif count <= 8: return "bg-light text-dark"
    elif count <= 11: return "bg-warning text-dark"
    elif count <= 14: return "bg-success"
    elif count <= 20: return "bg-purple"
    elif count <= 23: return "bg-light text-dark"
    elif count <= 29: return "bg-primary"
    else: return ""


capacitors_e = [[[['470N', '63'], ['1U', '63'], ['1U', '450V'], ['2U2', '63']], [['2U2', '450'], ['3U3', '63'], ['4U7', '50'], ['4U7', '63']], [['4U7', '450'], ['10U', '16'], ['10U', '25'], ['10U', '63']], [['10U', '450'], ['22U', '16'], ['22U', '63'], ['22U', '25']], [['22U', '35'], ['33U', '25'], ['47U', '16'], ['47U', '25']], [['47U', '63'], ['47U', '450'], ['100U', '16'], ['100U', '25']], [['100U', '63'], ['100U', '400'], ['220U', '10'], ['220U', '16']], [['220U', '25'], ['220U', '50'], ['330U', '16'], ['330U', '25']], [['470U', '16'], ['470U', '25'], ['470U', '63'], ['', '']], [['2200U', '25'], ['2200U', '50'], ['4700U', '16'], ['4700U', '25']], [['1000U', '16'], ['1000U', '25'], ['1000U', '63'], ['2200U', '16']], [['4700U', '50V'], ['', ''], ['', ''], ['', '']], ['&nbsp;'], ['&nbsp;'], ['&nbsp;'], ['&nbsp;'], ['&nbsp;'], ['&nbsp;'], ['&nbsp;'], ['&nbsp;'], ['&nbsp;']]]

#caps_e_pricing = [['', ['Pricing is unavailable']]]
caps_e_pricing = None

caps_e_message = "Starts from row 8"

def get_capacitor_e_colour(countin):
    return "bg-light text-dark"


capacitors_o = [[[], [], [], [], [], [], [], [], [], [], ['1N0', '1N2', '1N5', '1N8'], ['2N2', '2N7', '3N3', '3N9'], ['4N7', '5N8', '6N8', '8N2'], ['10N', '12N', '15N', '18N'], ['22N', '27N', '33N', '39N'], ['47N', '56N', '68N', '82N'], ['100N', '120N', '150N', '180N'], ['220N', '270N', '330N', '470N'], ['560N', '680N', '820N', '1U'], ['10N', '22N', '33N', '47N'], ['47N', '100N', '220N', '470N']],
                [['22N', '47N', '100N', '220N'], ['470N', '10N', '', ''], ['1P', '1P2', '1P5', '1P8'], ['2P2', '2P7', '3P3', '3P9'], ['4P7', '5P6', '6P8', '8P2'], ['10P', '12P', '15P', '18P'], ['22P', '27P', '33P', '39P'], ['47P', '56P', '68P', '82P'], ['100P', '120P', '150P', '180P'], ['220P', '270P', '330P', '390P'], ['470P', '560P', '680P', '820P'], ['1N', '2N2', '3N3', '4N7'], ['5N6', '6N8', '8N2', '10N'], ['22N', '33N', '4N7', '100N'], ['220N', '10N', '', ''], ['2U2', '4U7', '220N', '4U7'], ['10N', '22N', '47N', '100N'], ['220N', '470N', '1U', ''], [], [], ['1U5', '2U2', '3U3', '4U7'], ['EoL']],
                [['220U', '470U', '1000U', '2200U'], ['47U', '100U', '220U', '470U'], ['1000U', '22U', '47U', '100U'], ['220U', '470U', '', ''], ['100N', '220U', '330U', '470U'], ['1U', '1U', '1U5', '2U2'], ['4U7', '4U7', '6U8', '6U8'], ['10U', '10U', '10U', '15U'], ['22U', '33U', '47U', ''], ['100N', '220N', '330N', '470N'], ['680N', '1U', '1U5', '2U2'], ['3U3', '4U7', '10U', '22U'], ['33U', '47U', '100U', ''], ['47000U', '22F', '55F', '1F'], ['4000U', '8000U', '', ''], ['5600U', '10000U', '', ''], ['10000U', '', '', ''], ['6U', '10U', '12U', ''], ['', '20U', '30U', ''], ['&nbsp;'], ['&nbsp;']],
                [['150U', '220U', '300U', '400U'], ['1U', '1U5', '2U2', '3U3'], ['4U7', '5U6', '6U8', '8U2'], ['10U', '', '', ''], ['1N', '1N2', '1N5', '2N2'], ['2N7', '3N3', '3N9', '4N7'], ['6N8', '10N', '12N', '15N'], ['18N', '22N', '33N', '39N'], ['47N', '56N', '68N', '82N'], ['100N', '120N', '150N', '180N'], ['220N', '270N', '330N', '390N'], ['470N', '560N', '680N', '1U'], ['1U5', '', '', ''], ['6U8', '10U', '22U', '33U'], ['47U', '100U', '', ''], ['1U', '2U2', '3U3', '4U7'], ['1U', '2U2', '3U3', '4U7'], ['6U8', '10U', '15U', '22U'], ['33U', '47U', '68U', '100U']]]

#caps_o_pricing = [['', ['Volts', 'Qty 1+', 'Qty 25+', 'Qty 100+']], ['bg-light text-dark', ['100V', 'Pricing is unavailable']], ['bg-purple', ['630V']], ['bg-purple', ['250VAC']]]
caps_o_pricing = None

caps_o_volt_layout = {'100': [[0, 9], [29, 30], [46, 47], [51, 52], [55, 64], [66, 70]], '630': [[9, 11]], '250': [[11, 13], [52, 55]], '50': [[13, 101/4], [27, 29], [39, 167/4], [64, 66]], '3K': [[101/4, 26]], '10': [[26, 106/4]], '35': [[106/4, 26], [27, 130/4], [31, 129/4], [34, 35], [141/4, 36], [145/4, 146/4], [147/4, 37], [150/4, 151/4]], '25': [[30, 31], [35, 141/4], [149/4, 150/4], [167/4, 43]], '63': [[129/4, 34]], '16': [[36, 145/4], [146/4, 147/4], [37, 149/4], [151/4, 39]], '5.5': [[43, 173/4], [175/4, 44]], '2.5': [[173/4, 175/4]], '75': [[44, 177/4]], '80': [[177/4, 178/4]], '40': [[45, 46]], '400': [[47, 49]]}

caps_message = "Starts from row 6 on the Left"
caps_message2 = "Right side"

def get_capacitor_o_colour(countin):
    count1 = countin / 4
    count2 = (countin - 120) / 4
    if count1 <= 9: return "bg-light text-dark"
    elif count1 <= 11: return "bg-purple"
    elif count1 <= 13: return "bg-purple"
    elif count1 <= 26: return "bg-success"
    elif count1 <= 27: return "bg-light text-dark"
    elif count1 <= 29: return "bg-warning text-dark"
    #elif count1 <= 31: return "bg-light text-dark"
    elif count1 <= 30: return "bg-light text-dark"

    elif count2 <= 4: return "bg-purple"
    elif count2 <= 9: return "bg-success"
    elif count2 <= 13: return "bg-warning text-dark"
    elif count2 <= 17: return "bg-light text-dark"
    elif count2 <= 19: return "bg-success"
    elif count2 <= 21: return ""
    elif count2 <= 25: return "bg-purple"
    elif count2 <= 34: return "bg-warning text-dark"
    elif count2 <= 38: return "bg-primary"
    elif count2 <= 41: return "bg-purple"
    else: return ""


# blank_row = [[[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]]  # 21
